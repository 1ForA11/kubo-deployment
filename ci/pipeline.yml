---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: git-kubo-deployment
  type: git
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-deployment
    branch: master
    private_key: {{git-ssh-key}}

- name: git-kubo-release
  type: git
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-release
    branch: master
    private_key: {{git-ssh-key}}

- name: kubo-lock
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: {{git-ssh-key}}
    pool: kubo-deployment

- name: s3-bosh-state
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    bucket: kubo-pipeline
    endpoint: s3-eu-west-1.amazonaws.com
    region_name: eu-west-1
    versioned_file: bosh/state.json

- name: s3-bosh-creds
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    bucket: kubo-pipeline
    endpoint: s3-eu-west-1.amazonaws.com
    region_name: eu-west-1
    versioned_file: bosh/creds.yml

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack-url}}

jobs:
- name: claim-lock
  plan:
  - aggregate:
    - get: git-kubo-release
      trigger: true
    - get: git-kubo-deployment
      trigger: true
  - put: kubo-lock
    params: { acquire: true }

- name: install-bosh
  plan:
  - get: git-kubo-deployment
    trigger: true
    passed: [ 'claim-lock' ]
  - get: git-kubo-release
    passed: [ 'claim-lock' ]
  - get: kubo-lock
    passed: [ 'claim-lock' ]
  - task: install
    file: git-kubo-deployment/ci/tasks/install-bosh.yml
    params:
      GCP_SERVICE_ACCOUNT: {{gcp-service-account}}
    on_failure:
      put: slack-alert
      params:
        silent: true
        icon_emoji: ":thumbsdown:"
        text: |
          Deploy BOSH failed:
          https://p-concourse.main.kubo.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - aggregate:
    - put: s3-bosh-creds
      params:
        file: bosh-creds/creds.yml
    - put: s3-bosh-state
      params:
        file: bosh-state/state.json

- name: run-k8s-tests
  plan:
  - aggregate:
    - get: git-kubo-deployment
      passed: [ 'install-bosh' ]
      trigger: true
    - get: git-kubo-release
      passed: [ 'install-bosh' ]
    - get: kubo-lock
      passed: [ 'install-bosh' ]
    - get: s3-bosh-creds
      passed: [ 'install-bosh' ]
    - get: s3-bosh-state
      passed: [ 'install-bosh' ]
  - task: install
    file: git-kubo-deployment/ci/tasks/deploy-k8s-instance.yml
    on_failure:
      put: slack-alert
      params:
        silent: true
        icon_emoji: ":thumbsdown:"
        text: |
          Deploy K8s failed:
          https://p-concourse.main.kubo.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: destroy-bosh
  plan:
  - aggregate:
    - get: git-kubo-deployment
      passed: [ 'run-k8s-tests' ]
      trigger: true
    - get: kubo-lock
      passed: [ 'run-k8s-tests' ]
    - get: s3-bosh-creds
      passed: [ 'run-k8s-tests' ]
    - get: s3-bosh-state
      passed: [ 'run-k8s-tests' ]
  - task: destroy
    file: git-kubo-deployment/ci/tasks/destroy-bosh.yml
    params:
      GCP_SERVICE_ACCOUNT: {{gcp-service-account}}
    on_failure:
      put: slack-alert
      params:
        silent: true
        icon_emoji: ":thumbsdown:"
        text: |
          Destroy BOSH failed:
          https://p-concourse.main.kubo.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - put: kubo-lock
    params: { release: kubo-lock }
